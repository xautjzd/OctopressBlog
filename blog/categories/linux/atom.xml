<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | xautjzd]]></title>
  <link href="http://xautjzd.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://xautjzd.github.io/"/>
  <updated>2013-08-18T09:49:26+08:00</updated>
  <id>http://xautjzd.github.io/</id>
  <author>
    <name><![CDATA[xautjzd]]></name>
    <email><![CDATA[xautjzd@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux下截图工具shutter的安装与配置]]></title>
    <link href="http://xautjzd.github.io/blog/2013/08/16/install-and-config-shutter/"/>
    <updated>2013-08-16T16:57:00+08:00</updated>
    <id>http://xautjzd.github.io/blog/2013/08/16/install-and-config-shutter</id>
    <content type="html"><![CDATA[<p>我一直使用的是Fedora17，自带的截图工具实在不敢恭维，但也就这样断断续续的用着，不过也用的不多。但今天突然鬼使神差的搜了下其他的截图工具，Google搜了下，发现好多提到shutter，既然这么多文章都提到，说明肯定着实不赖，便尝试了下。安装及配置如下：</p>

<h3>1.安装</h3>

<p>安装过程很简单，执行下面命令即可：</p>

<pre><code>#yum install shutter
</code></pre>

<h3>2.配置</h3>

<p>QQ截图快捷键<code>&lt;ctrl&gt;+&lt;alt&gt;+A</code>用习惯了，所以也对shutter继续保留这个快捷键。具体配置方法如下：
在System Tools>System Settings>Keyboard>Shortcuts>Custom Shortcuts中添加了三个快捷键：</p>

<ul>
<li><p>截图整个屏幕（shutter -f）</p></li>
<li><p>截图当前活动窗口(shutter -a)</p></li>
<li><p>截图选定区域(shutter -s)</p></li>
</ul>


<p>具体配置及对应的快捷键设置参考下图：
<img src="/images/shutter-config.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[终端分屏工具tmux的安装与常用操作]]></title>
    <link href="http://xautjzd.github.io/blog/2013/08/08/tmux-use-and-configuration/"/>
    <updated>2013-08-08T16:12:00+08:00</updated>
    <id>http://xautjzd.github.io/blog/2013/08/08/tmux-use-and-configuration</id>
    <content type="html"><![CDATA[<h2>1. tmux简介</h2>

<p>tmux是terminal multiplexer的简称，是一款终端分屏的工具，可以在同一屏幕中划分出多个独立的shell环境，这样便于对比，唯一的缺陷是窗口比较小而已。一个server可以有多个session,一个session可以有多个windows,一个windows可以有多个pane.具体见<a href="http://tmux.sourceforge.net/">官网</a>介绍。</p>

<h2>2. 安装</h2>

<p>采用相应系统的包管理器即可安装。我装的是fedora,现以fedora为例：</p>

<pre><code>#yum install tmux
</code></pre>

<p>包不到1M大小，很快便安装完成。</p>

<!-- more -->


<h2>3. 操作</h2>

<p>首先，运行tmux。</p>

<pre><code>$tmux
</code></pre>

<p>然后可以水平分屏和纵向分屏。其常用的快捷键如下：</p>

<ul>
<li><p>水平分屏 :<code>&lt;c + b&gt; "</code>即按下ctrl + b后，再按双引号(shift + &lsquo;键)</p></li>
<li><p>垂直分屏 :<code>&lt;c + b&gt; %</code></p></li>
<li><p>新建窗口 :<code>&lt;c + b&gt; c</code></p></li>
<li><p>重命名窗口:<code>&lt;c + b&gt; ,</code></p></li>
<li><p>窗口切换 :<code>&lt;c + b&gt; number</code>，其中number为窗体的编号，从0开始。</p></li>
<li><p>切换到bash:<code>&lt;c + b&gt; d</code></p></li>
<li><p>切换回tmux:<code>$tmux attach</code></p></li>
<li><p>查看帮助文档：<code>&lt;c + b&gt; ?</code></p></li>
</ul>


<p>1.新建一个session</p>

<pre><code>tmux new-session -s sessionname(自己指定)
</code></pre>

<p>2.杀死一个session</p>

<pre><code>tmux kill-session -t sessionname
</code></pre>

<p>3.杀死所有session</p>

<pre><code>tmux kill-server
</code></pre>

<p>4.列出新建的session</p>

<pre><code>tmux ls(tmux list-sessions)
</code></pre>

<p>4.附加一个session</p>

<pre><code>tmux a -t sessionname
</code></pre>

<p>另外，tmux也非常适合结对编程，当两个人可以连接同一台电脑时，其中一个人在终端上的操作，另一个在终端能清楚的看到。操作方式如下：</p>

<p>A操作：$tmux new-session -s test</p>

<p>B操作：$tmux a(ttach) -t test</p>

<p>这样之后，A在终端上的一切操作B都能看到。</p>

<p>其他具体快捷方式，请参考帮助文档。</p>

<p>也可以参考：</p>

<p>1.<a href="http://happycasts.net/episodes/41?autoplay=true">http://happycasts.net/episodes/41?autoplay=true</a></p>

<p>2.<a href="http://caok1231.com/blog/2013/04/14/tmux/">http://caok1231.com/blog/2013/04/14/tmux/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim的代码自动补齐插件——UltiSnips]]></title>
    <link href="http://xautjzd.github.io/blog/2013/08/03/vim-ultisnips/"/>
    <updated>2013-08-03T15:12:00+08:00</updated>
    <id>http://xautjzd.github.io/blog/2013/08/03/vim-ultisnips</id>
    <content type="html"><![CDATA[<p>暑假时间充足，便又开始学习自己喜欢的Ruby。而学Ruby的最佳环境是Mac,其次是Linux,最次是Windows。Mac买不起，只能在Linux上折腾了，一台台式机装的Fedora17，自己的本是xp系统，装了不少微软的一套东西，毕竟教研室的项目都是在.net环境下进行的，不敢轻易换系统，所以便在本上装了个VirtualBox虚拟机，虚拟了一个Ubuntu。上面也配好了Ruby环境，毕竟本方便，带到哪里都可以学，但平时的Linux编程都是在台式机下，毕竟性能比虚拟机好。</p>

<p>而学习Ruby一般都是在Vim/Emacs/SublimeText 2下，RubyMine貌似很适合开发Ruby，由于是商业产品，没钱购买也就舍弃了，毅然决然的选择了Vim.都说高手使用的是Vim，想必必有可取之处。但是Vim的学习路线比较陡峭，开始是一段痛苦期，经过一段时间的摧残后，甜蜜的时光便来临了，各种强大而高效的插件让你目瞪口呆，顿时感觉其他IDE都蒻爆了。幸好我以前对Vim的基本操作便有了了解，所以再次学习起来便不那么痛苦，甚至不想回到Windows环境，不想再用其他的Editor。我现在用的插件并且给我印象深刻的大致有这么一些：Vundle,Ctrlp/command-T,UltiSnips/Snipmate,YouCompleteMe/SuperTab,NerdTree,Tagbar,FuzzyFinder,vim-rails，Markdown等。</p>

<!-- more -->


<p>其中Vundle作为Vim的插件管理神器必不可少，让安装插件变得非常方便，类似的插件也有pathogen。具体安装方法见<a href="https://github.com/gmarik/vundle">GitHub</a>.也可以参考我写的一篇关于Vundle的<a href="http://xautjzd.github.io/blog/2013/07/27/vim-vundle-install-and-config/">博文</a>。</p>

<p>而CtrlP则绝对是文件切换的神器，在多个文件间来回切换。也可以用:vs垂直分屏或者:sp水平分屏,这样最适合多个文件间的对比。&lt;ctrl-p>调出CtrlP候选文件,然后通过Up/Down键来选择文件。</p>

<p>UltiSnips则是自动补齐代码片段的神级插件，功能类似的有Snipmate插件。UltiSnips对常见的各种语言都有支持。代码补齐是通过编辑的文件后缀名来区分，如编辑xxx.html时，输入ul然后按Tab键则自动生成了<code>&lt;ul&gt;&lt;ul&gt;</code>片段，其他语言也类似，都有相应的关键字，具体每种语言的关键字参考UltiSnips目录下的xxx.snippets，自己也可以补充。</p>

<p>YouCompleteMe插件是一个代码提示功能，输入一部分然后就会出现候选的部分可供选择，不需要全部输入。类似的插件还有SuperTab。通过名字也可以看出它提供的候选词中也包括刚才输入的单词。默认的选择是通过Tab键来确定的，但由于和UltiSnips冲突，所以需要换默认的快捷方式，方法如下：</p>

<pre><code>"set YouCompleteMe trigger key 
let g:ycm_key_list_select_completion = ['&lt;c-n&gt;', '&lt;Down&gt;']
let g:ycm_key_list_previous_completion = ['&lt;c-p&gt;', '&lt;Up&gt;']
</code></pre>

<p>NerdTree提供一个目录结构，让习惯图形界面的朋友找到亲切感，作用不必多说。</p>

<p>Tagbar则配合ctags则提供文件的导航，将文件的关键字提取出来。ctags需要在目录下生成一个tags文件，生成方法:</p>

<pre><code>ctags -R yourdir  #生成tags文件
</code></pre>

<p>FuzzyFinder是一个模糊匹配的文件搜索插件。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim下的的插件管理神器——Vundle]]></title>
    <link href="http://xautjzd.github.io/blog/2013/07/27/vim-vundle-install-and-config/"/>
    <updated>2013-07-27T20:38:00+08:00</updated>
    <id>http://xautjzd.github.io/blog/2013/07/27/vim-vundle-install-and-config</id>
    <content type="html"><![CDATA[<p>断断续续用Vim也不少时间了，但是从来没有进行过复杂的Vim配置，每每需要插件都是网上寻求安装方式。但是当插件多了管理也便变得繁琐，最后终于让我结识了插件管理神器——Vundle，用过的人都说好用，所以我便也尝试了，网上也有一部分人采用pathogen来进行插件管理，但是据说没有Vundle好用，也便没有尝试，下面对我使用Vundle做一个总结。</p>

<p>首先Vundle采用git插件的git repo以及vim-scripts维护的GitHub repo, 自动安装, 更新和卸载插件. 把这些繁杂的工作变得简单, 甚至, 成为一种享受.</p>

<h2>安装</h2>

<p><a href="https://github.com/gmarik/vundle">Vundle地址</a>,上面安装及配置步骤已经很详细，我在此再赘述下：</p>

<p>1.拷贝Vundle</p>

<pre><code>$ git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
</code></pre>

<p>上面步骤将vundle拷贝到本地的～/.vim/bundle/vundle目录下</p>

<p>2.Vundle配置</p>

<p>以下是我的配置文件：</p>

<!-- more -->


<pre><code><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">set </span>runtimepath+<span class="o">=</span>~/.vim_runtime
</span><span class='line'>
</span><span class='line'><span class="nb">source</span> ~/.vim_runtime/vimrcs/basic.vim
</span><span class='line'><span class="nb">source</span> ~/.vim_runtime/vimrcs/filetypes.vim
</span><span class='line'><span class="nb">source</span> ~/.vim_runtime/vimrcs/plugins_config.vim
</span><span class='line'><span class="nb">source</span> ~/.vim_runtime/vimrcs/extended.vim
</span><span class='line'><span class="nb">source</span> ~/.vim_runtime/vimrcs/taglist.vim
</span><span class='line'>
</span><span class='line'><span class="nb">let </span><span class="nv">Tlist_Ctags_Cmd</span><span class="o">=</span><span class="s1">&#39;/usr/bin/ctags&#39;</span>
</span><span class='line'><span class="nb">let </span><span class="nv">Tlist_Inc_Winwidth</span><span class="o">=</span>0
</span><span class='line'><span class="nb">let </span><span class="nv">Tlist_Process_File_Always</span><span class="o">=</span>1
</span><span class='line'><span class="nb">let </span><span class="nv">Tlist_File_Fold_Auto_Close</span><span class="o">=</span>1
</span><span class='line'><span class="nb">set </span>autochdir
</span><span class='line'>
</span><span class='line'>colorscheme molokai
</span><span class='line'>
</span><span class='line'>try
</span><span class='line'>    <span class="nb">source</span> ~/.vim_runtime/my_configs.vim
</span><span class='line'>    catch
</span><span class='line'>    endtry
</span><span class='line'>
</span><span class='line'>    <span class="s2">&quot;Below is vundle configuration</span>
</span><span class='line'><span class="s2">    set nocompatible               &quot;</span>disable vi compatibility
</span><span class='line'>    filetype off                   <span class="s2">&quot; required!</span>
</span><span class='line'>
</span><span class='line'><span class="s2">    set rtp+=~/.vim/bundle/vundle/  &quot;</span><span class="nb">set </span>runtimepath
</span><span class='line'>    call vundle#rc<span class="o">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="s2">&quot; let Vundle manage Vundle  </span>
</span><span class='line'><span class="s2">    Bundle &#39;gmarik/vundle&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">    &quot;</span>My Bundles here
</span><span class='line'>    Bundle <span class="s1">&#39;tpope/vim-fugitive&#39;</span>
</span><span class='line'>    Bundle <span class="s1">&#39;Lokaltog/vim-easymotion&#39;</span>
</span><span class='line'>    Bundle <span class="s1">&#39;rstacruz/sparkup&#39;</span>, <span class="o">{</span><span class="s1">&#39;rtp&#39;</span>: <span class="s1">&#39;vim/&#39;</span><span class="o">}</span>
</span><span class='line'>    Bundle <span class="s1">&#39;tpope/vim-rails.git&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="s2">&quot;vim-scripts repos</span>
</span><span class='line'><span class="s2">    Bundle &#39;L9&#39;</span>
</span><span class='line'><span class="s2">    Bundle &#39;FuzzyFinder&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">    &quot;</span>snippets
</span><span class='line'>    Bundle <span class="s1">&#39;http://github.com/gmarik/snipmate.vim.git&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="s2">&quot;Syntax highlight</span>
</span><span class='line'><span class="s2">    Bundle &#39;cucumber.zip&#39;</span>
</span><span class='line'><span class="s2">    Bundle &#39;Markdown&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">    &quot;</span>Utility
</span><span class='line'>    Bundle <span class="s1">&#39;SuperTab&#39;</span>
</span><span class='line'>    Bundle <span class="s1">&#39;repeat.vim&#39;</span>
</span><span class='line'>    Bundle <span class="s1">&#39;surround.vim&#39;</span>
</span><span class='line'>    Bundle <span class="s1">&#39;file-line&#39;</span>
</span><span class='line'>    Bundle <span class="s1">&#39;scrooloose/nerdtree&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="s2">&quot;Navigation</span>
</span><span class='line'><span class="s2">    Bundle &quot;</span>http://github.com/gmarik/vim-visual-star-search.git<span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">    &quot;</span>non github repos
</span><span class='line'>    Bundle <span class="s1">&#39;git://git.wincent.com/command-t.git&#39;</span>
</span><span class='line'>    <span class="s2">&quot;git repos on your local machine (ie. when working on your own plugin)</span>
</span><span class='line'><span class="s2">    &quot;</span>Bundle <span class="s1">&#39;file:///Users/gmarik/path/to/plugin&#39;</span>
</span><span class='line'>
</span><span class='line'>    filetype plugin indent on     <span class="err">&quot;</span> required!
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></notextile></div>
</code></pre>

<p>其中将需要的插件用Bundle添加进来即可。如需要NERDTree插件，在github上找到它，找到的地址为：<a href="https://github.com/scrooloose/nerdtree.git">https://github.com/scrooloose/nerdtree.git</a></p>

<p>则在~/.vimrc里添加：</p>

<pre><code>Bundle 'scrooloose/nerdtree'
</code></pre>

<p>3.安装</p>

<p>推出刚才的配置文件，然后重新打开vim,并且执行:BundleInstall，这样NERDTree插件便安装完成，可以在~/.vim/bundle目录中查看。Vundle的特色在于使用git管理插件，更新方便，并且支持搜索。</p>

<p>:BundleInstall!更新插件，:BundleClean删除插件(只需在.vimrc中注释相应行), :BundleSearch查找插件。不同电脑间的同步只需通过.vimrc来实现（前提：安装git）。</p>

<p>安装插件就是这么简单！还没有体验的赶紧体验吧！</p>
]]></content>
  </entry>
  
</feed>
